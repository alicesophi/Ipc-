import turtle
import math


def plottingfibonacci(number):
    input_one = 0
    input_two = 1
    square_one = input_one
    square_two = input_two

    square.pencolor("red")

    square.forward(input_two * factor)
    square.left(90)
    square.forward(input_two * factor)
    square.left(90)
    square.forward(input_two * factor)
    square.left(90)
    square.forward(input_two * factor)

    fibonacci = square_two
    square_two = square_two + square_one
    square_one = fibonacci

    for i in range(1, number):
        square.backward(square_one * factor)
        square.right(90)
        square.forward(square_two * factor)
        square.left(90)
        square.forward(square_two * factor)
        square.left(90)
        square.forward(square_two * factor)

        fibonacci = square_two
        square_two = square_two + square_one
        square_one = fibonacci

    square.penup()
    square.setposition(factor, 0)
    square.seth(0)
    square.pendown()

    square.pencolor("green")

    square.left(90)
    for i in range(number):
        print(input_two)
        formula = math.pi * input_two * factor / 2
        formula /= 90
        for j in range(90):
            square.forward(formula)
            square.left(1)
        fibonacci = input_one
        input_one = input_two
        input_two = fibonacci + input_two


factor = 1
number = int(input('Enter the number of iterations (must be > 1): '))
if number > 0:
    print(f"Fibonacci series for {number} elements :")
    square = turtle.Turtle()
    square.speed(100)
    plottingfibonacci(number)
    turtle.done()
else:
    print("Number of iterations must be > 0")
